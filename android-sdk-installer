#!/usr/bin/env bash

# set -x
set +e

#detecting os
os=linux
if [[ `uname` == 'Darwin' ]]; then
    os=osx
fi

# Do not move to 25.2.5 just yet
# It has backwards incompatible changes (i.e. completely deprecating android/emulator)

# SDK Tools
# Please refer to https://dl.google.com/android/repository/repository2-1.xml

# This is where all the links for the latest SDK Tools will be
# https://dl.google.com/android/repository/sdk-tools-linux_3952940.zip
#ANDROID_SDK_VERSION=26.0.2
SDK_FILE=sdk-tools
if [[ $os == 'linux' ]]; then
    SDK_FILE=${SDK_FILE}-linux-3859397.zip

elif [[ $os == 'osx' ]]; then
    SDK_FILE=${SDK_FILE}-darwin-3859397.zip
fi
SDK_URL=https://dl.google.com/android/repository/$SDK_FILE
export USE_SDK_WRAPPER=true
# Defaults
INSTALLER_DIR=$HOME/.android-sdk-installer

for i in "$@"
do
case $i in
    --dir=*)
    INSTALLER_DIR=`echo $i | sed 's/[-a-zA-Z0-9]*=//'`
    ;;
    *)
    # unknown option
    ;;
esac
done

# Expand the path
if [[ $os == 'linux' ]]; then
    INSTALLER_DIR=`readlink -f "$INSTALLER_DIR"`
    export JAVA7_HOME='/usr/lib/jvm/java-7-oracle';
    export JAVA8_HOME='/usr/lib/jvm/java-8-oracle';
    export JAVA_HOME=$JAVA8_HOME
    export ANDROID_HOME=$INSTALLER_DIR/android-sdk-linux
    export TOOLS_DIR=$ANDROID_HOME/tools
    export ANDROID_STORE=/root/.android
elif [[ $os == 'osx' ]]; then
    INSTALLER_DIR=`stat -f "$INSTALLER_DIR"`
    export JAVA7_HOME='/Library/Java/JavaVirtualMachines/jdk1.7.0_79.jdk/Contents/Home';
    export JAVA8_HOME='/Library/Java/JavaVirtualMachines/jdk1.8.0_65.jdk/Contents/Home';
    export JAVA_HOME=$JAVA8_HOME
    export ANDROID_HOME=$INSTALLER_DIR/android-sdk-macosx
    export TOOLS_DIR=$ANDROID_HOME/tools
    export ANDROID_STORE=$HOME/.android
fi

SDK_MANAGER_PACKAGES_FILE=$INSTALLER_DIR/sdk_package.txt

echo "Cleaning SDK in $INSTALLER_DIR"
rm -rf $INSTALLER_DIR
mkdir -p $INSTALLER_DIR
mkdir -p $ANDROID_HOME
mkdir -p $TOOLS_DIR

# Setup environment file
echo "export ANDROID_HOME=$ANDROID_HOME" > $INSTALLER_DIR/env
echo "export PATH=$ANDROID_HOME/tools:$ANDROID_HOME/platform-tools:$TOOLS_DIR:\$PATH" >> $INSTALLER_DIR/env

# Accept all licences
mkdir -p "$ANDROID_HOME/licenses"
echo -e "\n8933bad161af4178b1185d1a37fbf41ea5269c55" > "$ANDROID_HOME/licenses/android-sdk-license"
echo -e "\n84831b9409646a918e30573bab4c9c91346d8abd" > "$ANDROID_HOME/licenses/android-sdk-preview-license"

sdkmanager () {
  "$ANDROID_HOME/tools/bin/sdkmanager" "$@"
}

android () {
  "$ANDROID_HOME/tools/android" "$@"
}

download_sdktools() {
  echo "Downloading SDK Tools"
  wget -nv -c -O $INSTALLER_DIR/$SDK_FILE $SDK_URL
}

extract_sdktools () {
  echo "Extracting SDK Tools"
  unzip -q -o -d $ANDROID_HOME $INSTALLER_DIR/$SDK_FILE
}

install_sdktools () {
  echo "Installing SDK Tools in $INSTALLER_DIR"
  download_sdktools
  extract_sdktools
}

overwrite_sdktools () {
  echo "Overwriting SDK Tools in $INSTALLER_DIR"
  rm -rf $TOOLS_DIR
  extract_sdktools
}

update_sdkmanager () {
  sdkmanager --update
}

licenses () {
  expect -c '
    set timeout -1;
    spawn $env(ANDROID_HOME)/tools/bin/sdkmanager --licenses
    expect {
      "(y/N)" { exp_send "y\r" ; exp_continue }
      eof
    }
  '
}

get_needed_packages () {
  sdkmanager --list --verbose |\
    # This is a hack as 25.2.4- tools do not correctly list paths for sdkmanager
    # grep -Riwo -e "path.*>" $ANDROID_STORE | awk -F'path="' -F'"' {'print $2'} | sort | uniq |\
    # Filter packages
    egrep '^\S+'      |\
    sed -E '/(---)/d'  |\
    sed -E '/(Info)/d' |\
    sed -E '/(Installed)/d' |\
    sed -E '/(Available)/d' |\
    sed -E '/(sources)/d' |\
    sed -E '/(docs)/d' |\
    sed -E '/(mips)/d' |\
    sed -E '/(intel)/d' |\
    sed -E '/(android-tv)/d' |\
    sed -E '/(android-wear)/d' |\
    sed -E '/(usb)/d' |\
    sed -E '/(x86)/d' |\
    sed -E '/(arm64)/d' |\
    sed -E '/(add-ons;addon-google_apis-google-(1|2|3|4|5|6|7|8|9|10|11|12|13|14|15|16|17|18|19))/d' |\
    sed -E '/(lldb;2.(0|1|2))/d' |\
    # emulators no longer really work in our environment
    sed -E '/(system-images)/d' |\
    sed -E '/(^tools)/d' |\
    sed -E '/(done)/d' > $SDK_MANAGER_PACKAGES_FILE
}

install_android () {
  echo "Installing SDK and other Android resources"
  sdkmanager --package_file=$SDK_MANAGER_PACKAGES_FILE --verbose
}

create_symlink () {
    SYMLINK_PATH=$HOME/.android-sdk
    rm -rf $SYMLINK_PATH
    ln -s $ANDROID_HOME $SYMLINK_PATH
}

main () {
  install_sdktools
  update_sdkmanager
  licenses
  get_needed_packages
  overwrite_sdktools
  install_android
  create_symlink
}

main
